<html lang="zh_CN">
	<head>
		<title>Visual Basic Script Shell</title>
		<HTA:APPLICATION
			APPLICATIONNAME="VBScript Shell"
			ID="VBShell"
			VERSION="1.0"
			INNERBORDER="no"/>
		<style>
			html, body {
				width: 100%;
            	height: 100%;
				margin: 0;
				border: 0;
				padding: 0;
				
				/*自动滚动条显示*/
				overflow-y: auto;
				overflow-x: auto;
				/*自动换行*/
			    word-wrap: break-word;
    			word-break: break-all;
			}
			
			p {
			    margin: 0px;
			}
			
			#Console {
			    background-color: #222222;
			    color: white;
			    
			    font-family: "Microsoft yahei mono", "微软雅黑";
			    letter-spacing: 0px;
			    font-size: 1.2em;
			    line-height: 1.2em;
			    
			    height: 100%;
			    position: relative;
				margin: 0 auto;
			    border: 10px solid black;
			    padding: 0;
			}
		</style>
	</head>
	<body onClick="SetFocus()" onKeyPress="OnKeyPress()">
		<div id="Console">
			<span style="color: LightBlue;display: inline-block;white-space:nowrap;">
				VBScript Shell
			</span>
            &emsp; Version: 0.4 beta
			<div Id="InputArea_0">
				<span style="color: LightGreen;">
					VBScript
				</span>
				&gt;
				<span id="SingleLineInputer_0" contentEditable="True"></span>
				<div id="MultiLineInputer_0" contentEditable="False"></div>
			</div>
		</div>
		<script>
			//模拟WScript对象。
			var WScript = {
				"CreateObject" : function(ProgID, Prefix) {
					if(Prefix) {
						return new ActiveXObject(ProgID, Prefix);
					} else {
						return new ActiveXObject(ProgID);
					}
				},
				"BuildVersion" : 16384,
				"Echo" : function(){
					var strText;
					if(arguments.length){
						strText = arguments[0];
						for(var i = 1; i < arguments.length; i++) {
							strText+='	' + arguments[i];
						}
						TextOutPut(strText);
					}
					return;
				}
			}
			var WSH = WScript;
			
			function TextOutPut(strText) {
				var pNode = document.createElement("p");
				pNode.innerText = strText;
				document.getElementById("Console").appendChild(pNode);
			}
		</script>
		<script language="VBScript">
			Option Explicit
			
            Public $
            Set $ = GetRef("document.getElementById")

			Public nodeInputArea
			Sub Window_OnLoad
				Rem 创建InputArea的备份。
				Set nodeInputArea = $("InputArea_0").cloneNode(True)
				
				Rem 自动进入输入模式。
				Call SetFocus()
			End Sub
			
			Rem CodeInputer ID动态返回。
			Public lngInputerIndex
			lngInputerIndex = 0
			Public strInputMode
			strInputMode = "SingleLineInputer" '默认为单行代码输入模式
			Function InputerID()
				InputerID = strInputMode & "_" & CStr(lngInputerIndex)
			End Function
			
			Rem 点击页面时自动让CodeInputer获得焦点。
			Sub SetFocus()
				With document
					If .selection.createRange().text = "" Then '未选中文字时
						Call .getElementById(InputerID()).Focus
					End If
				End With
			End Sub
			
			Rem 按键处理。
			Public strSavedCode
			Function OnKeyPress()
				With document.getElementById(InputerID())
					Rem 按键后进行高亮处理。
					If strSavedCode <> .innerText Then
						.innerHTML = Highlight(.innerText)
						strSavedCode = .innerText
					End If
					
					Rem 处理特殊按键。
					'WScript.echo window.event.keyCode
					Select Case window.event.keyCode
						Case 13 'Enter
							If strInputMode = "SingleLineInputer" Then
								If .innerText = "" Then
									Rem 单行输入为空并回车，切换为多行代码输入模式。
									.setAttribute "contentEditable", "False"
									strInputMode = "MultiLineInputer"
									document.getElementById _
										(InputerID()).setAttribute _
										"contentEditable", "True"
									Call SetFocus
									window.event.keyCode = 0 '阻断按键。
									OnKeyPress = False
									Exit Function
								Else 
									Rem 去掉MultiLineCodeInputer，去掉空行。
									document.getElementById _
										("MultiLineInputer_" & CStr(lngInputerIndex)).parentNode.removeChild _
										(document.getElementById("MultiLineInputer_" & CStr(lngInputerIndex)))
									
									Rem 执行单行输入代码。
									CodeRunner .innerText
									.setAttribute "contentEditable", "False" '关闭代码输入功能
									window.event.keyCode = 0
									OnKeyPress = False
								End If
							End If
						Case 10 'Ctrl+Enter
							If strInputMode = "MultiLineInputer" Then '只在多行代码输入模式时响应
								CodeRunner .innerText
								window.event.keyCode = 0
								.setAttribute "contentEditable", "False"
							End If
							window.event.keyCode = 0
							OnKeyPress = False
					End Select
				End With
			End Function
			
			Sub CodeRunner(strCode)
				On Error Resume Next
				ExecuteGlobal strCode
				If Err.Number <> 0 Then
					WScript.Echo "脚本错误"
					WScript.Echo "源：    " & Err.Source 
					WScript.Echo "描述：  " & Err.Description
					WScript.Echo "代码：  " & CStr(Err.Number)
					Err.Clear
				End If
				On Error Goto 0
				
				Rem 给Console追加新的InputArea。
				lngInputerIndex = lngInputerIndex + 1
				nodeInputArea.setAttribute "id", "InputArea_" & CStr(lngInputerIndex)
				nodeInputArea.getElementsByTagName("span")(1).setAttribute _
					"id", "SingleLineInputer_" & CStr(lngInputerIndex)
				nodeInputArea.getElementsByTagName("div")(0).setAttribute _
					"id", "MultiLineInputer_" & CStr(lngInputerIndex)
				document.getElementById("Console").appendChild nodeInputArea
				
				Rem 备份InputArea。
				Set nodeInputArea = document.getElementById _
					("InputArea_" & CStr(lngInputerIndex)).cloneNode(True)
				
				Rem 还原输入模式。
				strInputMode = "SingleLineInputer"
				Call SetFocus
			End Sub
			
		</script>
	</body>
</html>