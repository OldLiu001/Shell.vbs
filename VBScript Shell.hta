<html lang="zh_CN">
	<head>
		<title>Visual Basic Script Shell</title>
		<HTA:APPLICATION
			APPLICATIONNAME="VBScript Shell"
			ID="oMSHTA"
			VERSION="1.0"
			INNERBORDER="no"/>
		<style>
			html, body {
				width: 100%;
            	height: 100%;
				margin: 0;
				border: 0;
				padding: 0;
				
				/*自动滚动条显示*/
				overflow-y: auto;
				overflow-x: auto;
				/*自动换行*/
			    word-wrap: break-word;
    			word-break: break-all;
			}
			
			p {
			    margin: 0px;
			}
			
			#Console {
			    background-color: #222222;
			    color: white;
			    
			    font-family: 'Microsoft yahei mono',Consolas,'Microsoft YaHei';
			    letter-spacing: 0px;
			    font-size: 1.2em;
			    line-height: 1.2em;
			    
			    height: 100%;
			    position: relative;
				margin: 0 auto;
			    border: 10px solid black;
			    padding: 0;
			}
		</style>
	</head>
	<body onClick="SetFocus()" onKeyPress="OnKeyPress()">
		<div id="Console">
			<span style="color: LightBlue;display: inline-block;white-space:nowrap;">
				VBScript Shell
			</span>
            &emsp; Version: 0.4 beta
			<div Id="InputArea_0">
				<span style="color: LightGreen;">
					VBScript
				</span>
				&gt;
				<span id="SingleLineInputer_0" contentEditable="True"></span>
				<div id="MultiLineInputer_0" contentEditable="False"></div>
			</div>
		</div>
		<script>
		    window.FSO = new ActiveXObject('Scripting.FileSystemObject');
		    window.WS = new ActiveXObject('WScript.Shell');

		    //模拟WScript对象。
		    window.WScript = window.WSH = {
		        'Application' : oMSHTA.applicationName,
		        'CreateObject' : function (ProgID, Prefix) {
		            if (Prefix) {
		                return new ActiveXObject(ProgID, Prefix);
		            } else {
		                return new ActiveXObject(ProgID);
		            }
		        },
		        'BuildVersion' : navigator.appVersion,
		        'Echo' : function () {
		            var strText;
		            if (arguments.length) {
		                strText = arguments[0];
		                for (var i = 1; i < arguments.length; i++) {
		                    strText += '	' + arguments[i];
		                }
		                TextOutPut(strText);
		            }
		            return;
		        },
		        'Name' : 'HTML Application',
		        'FullName' : 'mshta.exe',
		        'ScriptName' : oMSHTA.commandLine.replace(/^(")?[^"]+[\\\/]([^\\\/\?]+?)(?:[\?#][^\\\/\?#]*)?\1.*$/, "$2"),
                'ScriptFullName' : location.pathname,
                'Timeout' : 0,
                'Interactive' : 1
		    }
		    var WSH = WScript;

		    function TextOutPut(strText) {
		        var pNode = document.createElement("p");
		        pNode.innerText = strText;
		        document.getElementById("Console").appendChild(pNode);
		    }

		    //function ImportJS() {
		    //    alert(FSO.ReadAll());
		    //}
		</script>
		<script language="VBScript">
			'Option Explicit
			
			Public nodeInputArea
			Sub Window_OnLoad
				Rem 创建InputArea的备份。
				Set nodeInputArea = document.getElementById("InputArea_0").cloneNode(True)
				
				Rem 自动进入输入模式。
				Call SetFocus()
			End Sub
			
			Rem CodeInputer ID动态返回。
			Public lngInputerIndex
			lngInputerIndex = 0
			Public strInputMode
			strInputMode = "SingleLineInputer" '默认为单行代码输入模式
			Function InputerID()
				InputerID = strInputMode & "_" & CStr(lngInputerIndex)
			End Function
			
			Rem 点击页面时自动让CodeInputer获得焦点。
			Sub SetFocus()
				With document
					If .selection.createRange().text = "" Then '未选中文字时
						Call .getElementById(InputerID()).Focus
					End If
				End With
			End Sub
			
			Rem 按键处理。
			Public strSavedCode
			Function OnKeyPress()
				With document.getElementById(InputerID())
					Rem 按键后进行高亮处理。
					If strSavedCode <> .innerText Then
						.innerHTML = Highlight(.innerText)
						strSavedCode = .innerText
					End If
					
					Rem 处理特殊按键。
					'WScript.echo window.event.keyCode
					Select Case window.event.keyCode
						Case 13 'Enter
							If strInputMode = "SingleLineInputer" Then
								If .innerText = "" Then
									Rem 单行输入为空并回车，切换为多行代码输入模式。
									.setAttribute "contentEditable", "False"
									strInputMode = "MultiLineInputer"
									document.getElementById _
										(InputerID()).setAttribute _
										"contentEditable", "True"
									Call SetFocus
									window.event.keyCode = 0 '阻断按键。
									OnKeyPress = False
									Exit Function
								Else 
									Rem 去掉MultiLineCodeInputer，去掉空行。
									document.getElementById _
										("MultiLineInputer_" & CStr(lngInputerIndex)).parentNode.removeChild _
										(document.getElementById("MultiLineInputer_" & CStr(lngInputerIndex)))
									
									Rem 执行单行输入代码。
									CodeRunner .innerText
									.setAttribute "contentEditable", "False" '关闭代码输入功能
									window.event.keyCode = 0
									OnKeyPress = False
								End If
							End If
						Case 10 'Ctrl+Enter
							If strInputMode = "MultiLineInputer" Then '只在多行代码输入模式时响应
								CodeRunner .innerText
								window.event.keyCode = 0
								.setAttribute "contentEditable", "False"
							End If
							window.event.keyCode = 0
							OnKeyPress = False
					End Select
				End With
			End Function
			
			Sub CodeRunner(strCode)
				On Error Resume Next
				ExecuteGlobal strCode
				If Err.Number <> 0 Then
					WScript.Echo "脚本错误"
					WScript.Echo "源：    " & Err.Source 
					WScript.Echo "描述：  " & Err.Description
					WScript.Echo "代码：  " & CStr(Err.Number)
					Err.Clear
				End If
				On Error Goto 0
				
				Rem 给Console追加新的InputArea。
				lngInputerIndex = lngInputerIndex + 1
				nodeInputArea.setAttribute "id", "InputArea_" & CStr(lngInputerIndex)
				nodeInputArea.getElementsByTagName("span")(1).setAttribute _
					"id", "SingleLineInputer_" & CStr(lngInputerIndex)
				nodeInputArea.getElementsByTagName("div")(0).setAttribute _
					"id", "MultiLineInputer_" & CStr(lngInputerIndex)
				document.getElementById("Console").appendChild nodeInputArea
				
				Rem 备份InputArea。
				Set nodeInputArea = document.getElementById _
					("InputArea_" & CStr(lngInputerIndex)).cloneNode(True)
				
				Rem 还原输入模式。
				strInputMode = "SingleLineInputer"
				Call SetFocus
			End Sub
			




            Function HighLight(strToHighlight)
	Rem Vbs高亮函数，老刘编写。
	Rem http://www.bathome.net/thread-47323-1-1.html
	Rem HTML特殊字符及标签处理感谢bbaa。
	Rem 灵感 From Demon's Vbs-Beautifier
	
	Rem 常量设置
	Dim STRING_FLAG,COMMENT_FLAG,BLANK_FLAG,SPECIAL_CHAR_FLAG
	Dim [符号集合],[保留字集合],[内置函数集合],[内置常量集合]
	STRING_FLAG = Chr(1)
	COMMENT_FLAG = Chr(2)
	BLANK_FLAG = Chr(3)
	SPECIAL_CHAR_FLAG = Chr(4)
	[符号集合] = ",./\()<=>+-*^&"
	[保留字集合] = Split("And As Boolean ByRef Byte ByVal Call Case Class Const Currency Debug Dim Do Double Each Else ElseIf Empty End EndIf Enum Eqv Event Exit Explicit False For Function Get Goto If Imp Implements In Integer Is Let Like Long Loop LSet Me Mod New Next Not Nothing Null On Option Optional Or ParamArray Preserve Private Property Public RaiseEvent ReDim Resume RSet Select Set Shared Single Static Stop Sub Then To True Type TypeOf Until Variant WEnd While With Xor"," ")
	[内置函数集合] = Split("Abs Array Asc Atn CBool CByte CCur CDate CDbl CInt CLng CSng CStr Chr Cos CreateObject Date DateAdd DateDiff DatePart DateSerial DateValue Day Escape Eval Exp Filter Fix FormatCurrency FormatDateTime FormatNumber FormatPercent GetLocale GetObject GetRef Hex Hour InStr InStrRev InputBox Int IsArray IsDate IsEmpty IsNull IsNumeric IsObject Join LBound LCase LTrim Left Len LoadPicture Log Mid Minute Month MonthName MsgBox Now Oct Randomize RGB RTrim Replace Right Rnd Round ScriptEngine ScriptEngineBuildVersion ScriptEngineMajorVersion ScriptEngineMinorVersion Second SetLocale Sgn Sin Space Split Sqr StrComp StrReverse String Tan Time TimeSerial TimeValue Timer Trim TypeName UBound UCase Unescape VarType Weekday WeekdayName Year"," ")
	[内置常量集合] = Split("vbBlack vbRed vbGreen vbYellow vbBlue vbMagenta vbCyan vbWhite vbBinaryCompare vbTextCompare vbSunday vbMonday vbTuesday vbWednesday vbThursday vbFriday vbSaturday vbUseSystemDayOfWeek vbFirstJan1 vbFirstFourDays vbFirstFullWeek vbGeneralDate vbLongDate vbShortDate vbLongTime vbShortTime vbObjectError vbOKOnly vbOKCancel vbAbortRetryIgnore vbYesNoCancel vbYesNo vbRetryCancel vbCritical vbQuestion vbExclamation vbInformation vbDefaultButton1 vbDefaultButton2 vbDefaultButton3 vbDefaultButton4 vbApplicationModal vbSystemModal vbOK vbCancel vbAbort vbRetry vbIgnore vbYes vbNo vbCr vbCrLf vbFormFeed vbLf vbNewLine vbNullChar vbNullString vbTab vbVerticalTab vbUseDefault vbTrue vbFalse vbEmpty vbNull vbInteger vbLong vbSingle vbDouble vbCurrency vbDate vbString vbObject vbError vbBoolean vbVariant vbDataObject vbDecimal vbByte vbArray WScript Wsh"," ")
	
	Rem 正则对象初始化
	Dim re
	Set re = New RegExp
	re.Global = True
	re.IgnoreCase = True
	re.MultiLine = False
	
	Rem 读取代码
	Dim strCode
	strCode = strToHighlight
	
	Rem HTML特殊符号预处理
	Dim [着色标签],[换行标签],[空白字符]
	[着色标签] = "<span style=""color:|ReplaceHere|;"">$1</span>"
	[换行标签] = "<br>"
	[空白字符] = "&nbsp;"
	strCode = Replace(strCode,"&",SPECIAL_CHAR_FLAG&"amp;")
	strCode = Replace(strCode,">",SPECIAL_CHAR_FLAG&"gt;")
	strCode = Replace(strCode,"<",SPECIAL_CHAR_FLAG&"lt;")
	
	Rem 预处理字符串
	Dim [字符串集合]
	re.Pattern = """.*?"""
	Set [字符串集合] = re.Execute(strCode)
	strCode = re.Replace(strCode, STRING_FLAG)
	
	Rem 预处理空字符
	strCode = Replace(strCode,Chr(9),"    ")
	strCode = Replace(strCode," ",BLANK_FLAG)
	
	Rem 预处理换行
	strCode = Replace(strCode,vbNewLine,vbCr)
	strCode = Replace(strCode,vbLf,vbCr)
	
	Rem 预处理注释
	Dim [注释集合]
	re.Pattern = "((?:\x03*Rem\x03+|')[^\r]*)" '在此严重的感谢bbaa指导
	Set [注释集合] = re.Execute(strCode)
	strCode = re.Replace(strCode, COMMENT_FLAG)
	
	Rem 添加着色标签以及HTML特殊符号处理
	With re
		Rem 偷懒操作，用正则将符号集合替换为正则表达式，再用替换出来的正则表达式处理strCode。
		Rem 下面三行的代码完成了 ",./\()<=>+-*&^" ==> "(\,|\.|\/|\\|\(|\)|\<|\=|\>|\+|\-|\*|\&|\^)"
		.Pattern = ""
		.Pattern = re.Replace([符号集合],"|\")
		.Pattern = "(" & Left(Right(.Pattern,Len(.Pattern) - 1),Len(.Pattern) - 3) & ")"
		strCode = .Replace(StrCode,Replace([着色标签],"|ReplaceHere|","OrangeRed"))
	End With
	
	strCode = Replace(strCode,SPECIAL_CHAR_FLAG&"amp;","<span style=""color:OrangeRed;"">"&SPECIAL_CHAR_FLAG&"amp;"&"</span>")
	strCode=Replace(strCode,SPECIAL_CHAR_FLAG&"gt;","<span style=""color:OrangeRed;"">"&SPECIAL_CHAR_FLAG&"gt;"&"</span>")
	strCode=Replace(strCode,SPECIAL_CHAR_FLAG&"lt;","<span style=""color:OrangeRed;"">"&SPECIAL_CHAR_FLAG&"lt;"&"</span>")
	
	Dim [保留字]
	For Each [保留字] In [保留字集合]
		re.Pattern = "\b("&[保留字]&")\b"
		strCode = re.Replace(strCode, Replace([着色标签],"|ReplaceHere|","MediumPurple"))
	Next
	
	Dim [内置函数]
	For Each [内置函数] In [内置函数集合]
		re.Pattern = "\b("&[内置函数]&")\b"
		strCode = re.Replace(strCode, Replace([着色标签],"|ReplaceHere|","Orange"))
	Next
	
	Dim [内置常量]
	For Each [内置常量] In [内置常量集合]
		re.Pattern = "\b("&[内置常量]&")\b"
		strCode = re.Replace(strCode, Replace([着色标签],"|ReplaceHere|","LightBlue"))
	Next
	
	Rem 处理注释
	Dim [注释]
	For Each [注释] In [注释集合]
		strCode = Replace(strCode, COMMENT_FLAG, _
		Replace(Replace([着色标签],"|ReplaceHere|","Gray"),"$1",[注释]), 1, 1) 'or #00ff00
	Next
	
	Rem 处理字符串
	Dim [字符串]
	For Each [字符串] In [字符串集合]
		strCode = Replace(strCode, STRING_FLAG, _
		Replace(Replace([着色标签],"|ReplaceHere|","LightGreen"),"$1",[字符串]), 1, 1)
	Next
	
	Rem 处理换行和空字符
	strCode = Replace(strCode,vbCr,[换行标签])
	strCode = Replace(strCode,BLANK_FLAG,[空白字符])
	strCode = Replace(strCode,SPECIAL_CHAR_FLAG,Chr(&H26))
	
	Rem 处理完成。
	Highlight = strCode
End Function














'以下为新合并内容，待整理

          
        '载入必要的组件
Dim LibFiles
Dim CMD_Input,IsOutPut,Help_Str,str,IsConfig,InputType,PromptStr,PromptSet,ControlNum,filepath,char,RootFolder,ScriptType,ScriptName,FuncList,file,ScriptFile,IsScript,LineCount,ScriptLine,NeedExecute
Dim Isrecv,RecvData,IsRemote'Socket变量
IsOutPut=True
IsConfig=True
InputType=1
CMD_Input="'"
ControlNum=0
CurrentDirectory=ws.CurrentDirectory'普通变量初始化

Execute("Public Const Desktop= """&WS.ExpandEnvironmentStrings("%UserProFile%\Desktop")&Chr(34))
Execute("Public Const WinDir="""&WS.ExpandEnvironmentStrings("%Windir%")&Chr(34))
Execute("Public Const Path="""&WS.ExpandEnvironmentStrings("%path%")&Chr(34))
Execute("Public Const UserProFile="""&WS.ExpandEnvironmentStrings("%Userprofile%")&Chr(34))
Execute("Public Const FLib="""&WS.ExpandEnvironmentStrings("%VBSH_FLib%")&Chr(34))
Execute("Public Const ComLib="""&WS.ExpandEnvironmentStrings("%VBSH_Dll%")&Chr(34))
Dim rIsUAC:rIsUAC=IsUAC


'初始化静态变量
Public Const NL=Null
Public Const BK=1
Public Const RT=2'重要的变量初始化
Public Const KB=1024
Public Const MB=1048576
Public Const GB=1073741824
Public Const TB=1099511627776

Public Const VersionNum="0016"
Public Const VersionName="1.0.0.16"
Public Const ProductName="VBS Shell"
Public Const LastVersiondTime="202005142100" '版本和产品信息
'该版本使用CScript解释器运行。
filearr=Split(ReadAll(WScript.ScriptFullName),vbCrLf)'初始化动态变量
For i=0 To UBound(filearr)
		If LCase(Trim(Left(filearr(i),9)))="function"Or LCase(Trim(Left(filearr(i),3)))="sub" Then
			Help_Str=Help_Str&filearr(i)&vbCrLf
		End If 
Next
            

'---------------------------------function and sub end---------------------------------------------------------


'If LCase(Right(WScript.FullName,11))<>"cscript.exe" Then
'	Start()
'	WScript.Quit
'End If

Import("Coreutils.vbs")

'If WScript.Arguments.Count=1 Then
'	
'	Dim Islogo
'	Islogo=True
'	Select Case Trim(LCase(WScript.Arguments(0)))
'	Case "-nl"
'		Islogo=False
'	Case "-re"
'		
'	End Select
'	If fso.FileExists(WScript.Arguments(0))=True Then
'		IsScript=True
'		ScriptName=WSH.Arguments(0)
'		Set ScriptFile=fso.OpenTextFile(WScript.Arguments(0))
'	End If
'End If 

'If IsScript<>True And Islogo=True Then
	WSH.Echo ProductName&" [版本 " & VersionName & "]"
	WScript.Echo("内部版本 "& VersionNum)
	WScript.Echo("版权所有 " & Chr(60) + Chr(99) + Chr(62) & " 2019 " + "TECH_N00b&小肥羊。" + Chr(32) + "保留所有权利。")
	WScript.Echo("")
'End If

'-------------------------------input part-----------------------------------------------------
'Dim Count,ErrMode
'ErrMode=0
'InputType=1

'Do
'	If ErrMode=0 Then On Error Goto 0
'	If ErrMode=1 Then On Error Resume Next
'	
'	Select Case InputType
'		Case 1
'		If IsScript Then
'			If ScriptFile.AtEndOfStream Then WSH.Quit()
'			CMD_Input=ScriptFile.ReadLine
'		Else
'			If rIsUAC= True Then WScript.StdOut.Write(WS.CurrentDirectory & "#>")
'			If rIsUAC<>True Then WScript.StdOut.Write(WS.CurrentDirectory & "@>")
'			CMD_Input=WScript.StdIn.ReadLine
'		End If
'		ErrorDealing()
'		Case 2
'		If IsScript=False Then
'			output=Null
'			For i=0 To ControlNum
'				output=output&"----"
'			Next
'			WScript.StdOut.Write output
'			str=Trim(LCase(WScript.StdIn.ReadLine))
'		Else
'			If IsAtEnd<>True Then
'				str=ScriptFile.ReadLine	
'			End If
'			IsScript=True
'		End If
'		CMD_Input=str
'		str=Trimpp(str)
'		If InStr(str,"next")Or InStr(str,"loop")Or InStr(str,"end ")Then
'			ControlNum=ControlNum-1
'		End If   
'		If InStr(str,"do ")Or InStr(str,"if ") Or InStr(str,"for") Or InStr(str,"select")Or InStr(str,"with ") Or InStr(str,"wend") Then
'			If InStr(str,"end if") Or InStr(str,"end function") Then ControlNum=ControlNum-1
'			If InStr(input,"if") Then
'				If(Right(Trim(LCase(input)),4)<>"then") Then ControlNum=ControlNum-1
'			End If 
'			ControlNum=ControlNum+1
'		End If
'		If ControlNum=0 Then 
'			NotNeedCheck=True
'			NeedExecute=True
'		End If
'		CMD_Input=str
'		str=Null
'	End Select
'	If InputType=2 Then
'		Code=Code&vbCrLf&Deal(CMD_Input)
'	Else
'		Code=Deal(CMD_Input)
'			
'	End If
'	If ControlNum=0 Then 
'		InputType=1
'	End If
'	If InputType=1 And IsScript<>True  Then
'		'--------------------------------------execute part------------------------------------------------------------------------------
'		On Error Resume next
'		If ScriptType<>"bat" Then 
'			Code="'VBS Shell Code here:"&vbCrLf&Code
'			Execute(Code)
'		Else
'			System(Code)
'			ScriptType="vbs"
'		End If
'		CMD_Input=Null
'		Code=Null
'		If Err.Number<>0 Then 
'			WSH.Echo("错误:" & Err.Number)
'			WScript.Echo(Err.Description)
'			WScript.Echo("仅支持vbscript。您可以：")
'			WScript.Echo("  1.在搜索引擎搜索“" & Err.Description & "”")
'			WScript.Echo("  2.输入”About“以联系开发者。")
'		End If
'		On Error Goto 0
'		'----------------------------------------execute part end -----------------------------------------------------------------------------
'	End If
'Loop










'------------------------Preparing.....-------------------------------------

Function Start()
	WS.Run "%windir%\system32\Cscript //nologo "&WScript.ScriptFullName 
End Function

Sub GetCommand()'列出所有命令
	WScript.Echo(Help_Str)'这个变量储存命令说明
End Sub

Sub GetHelp(ByVal FuncStr)
	If InStr(FuncStr,"function")Or InStr(FuncStr,"sub")Then
		WSH.Echo("不应有'sub'或者'function'在查询字符中。")
		Exit Sub
	End If

	If IsActiveX(Funcstr) Then 
		Set TLI=CreateObject("TLI.TLIApplication")
		Set O=CreateObject(Funcstr)
		Set Info = tli.ClassInfoFromObject(O)
		For Each Member In Info.DefaultInterface.Members
    		Echo Member.Name 
		Next
		Exit Sub
	End If
	
	If FSO.FileExists(Funcstr)Then
		If LCase(FSO.GetExtensionName(Funcstr))="dll"Or LCase(FSO.GetExtensionName(Funcstr))="ocx" Then
			Set TLI=CreateObject("TLI.TLIApplication")
			Set Info = tli.TypeLibInfoFromFile("scrrun.dll")
			For Each Interface In Info.Interfaces
   				Echo Interface.Name 
			Next
			Exit sub
		End If
	End If
	
	StrArr=Split(Help_Str,vbCrLf)
	For i=0 To UBound(StrArr)
		If InStr(LCase(StrArr(i)),LCase(FuncStr)) Then
			Echo(StrArr(i))
		End If
	Next
End Sub

Function IsActiveX(ByVal ComName)
	On Error Resume Next
    Dim O
    Set O = CreateObject(ComName)
    If Err.Number = 0 Then
        IsActiveX = True
    Else
        IsActiveX = False
    End If
    Set O = Nothing
    Err.Clear
    On Error Goto 0
End Function


Sub ErrorDealing()
	If Err.Number <> 0 Then 
		WScript.Echo "错误：" & Err.Number
		WScript.Echo Err.Description
		Select Case Err.Number
			Case 62  
			WScript.Echo "这可能是您错误按下Ctrl+Z引起的。"
		Case Else
			WScript.Echo("仅支持vbscript。您可以：")
			WScript.Echo("  1.在搜索引擎搜索“" & Err.Description & "”")
			WScript.Echo("  2.输入”About“以联系开发者。")
		End Select
		ExecuteGlobal("input=Null")
	End If
End Sub

Sub CLS()
	For i=0 To 2000
		str=str&vbCrLf
	Next
	WScript.Echo str
	str=Null
End Sub

Function WhichType(ByVal varname)
	If varname=Null Then 
		WhichType="[null]"
	ElseIf IsArray(varname) Then 
		WhichType="[Array]"
	ElseIf IsObject(varname) Then
		WhichType="[Object]"
	ElseIf IsNumeric(varname) Then 
		If InStr(varname,".")Then 
			WhichType="[Float]"
		Else
			WhichType="[Int]"
		End If		
	End If
End Function

Sub Import(ByVal sInstFile) 
	If FSO.FileExists(FLib&"\"&sInstFile) Then sInstFile=Lib&"\"&sInstFile
	If FSO.FileExists(sInstFile&".vbs") Then sInstFile=sInstFile&".vbs"
	If Not FSO.FileExists(sInstFile) Then 
		WScript.Echo("Import:Can't find the moudle file("&sInstFile&").")
		Exit Sub
	End If
	LibFiles=LibFiles&sInstFile&vbCrLf
	FileStr=ReadAll(sInstFile)
	filearr=Split(FileStr,vbCrLf)
	Help_Str=Help_Str&sInstFile&"{"&vbCrLf
	For i=0 To UBound(filearr)
		If LCase(Trim(Left(filearr(i),9)))="function"Or LCase(Trim(Left(filearr(i),3)))="sub" Then
			
			Help_Str=Help_Str&"    "&filearr(i)&vbCrLf
		End If 
	Next
	Help_Str=Help_Str&"}"&vbCrLf&vbCrLf 
	On Error Resume Next
		ExecuteGlobal(FileStr)
		If Err.Number<>0 Then WS.Run FileStr:Exit sub
	On Error Goto 0	
End Sub 

Sub About()
	WScript.Echo("《关于本程序》")
	WScript.Echo("")
	WScript.Echo(ProductName)
	WScript.Echo("版本号：" & VersionName)
	WScript.Echo("内部版本：" & VersionNum)
	WScript.Echo("最后编辑时间：" & LastVersiondTime)
	WScript.Echo("")
	WScript.Echo("    本程序的著作权归TECH_Noob和小肥羊所有。所有权利保留。")
	WScript.Echo("    本程序不会记录您的任何个人信息。请您放心使用。")
	WScript.Echo("    本程序也不包含任何恶意代码，但不排除被他人捆绑黑客软件的可能。请从正规渠道获取该程序。")
	WScript.Echo("    如果你需要联系本程序的开发者，请通过下列渠道：")
	WScript.Echo("网站：")
	WScript.Echo("	开发者2：yangruixian.icoc.me")	
	WScript.Echo("邮箱：")
	WScript.Echo("	TECH_N00b：3464943410@qq.com")
	WScript.Echo("	开发者2：joengjeoijin@outlook.com")
	WScript.Echo("QQ：")
	WScript.Echo("TECH_N00b：3464943410")
	WScript.Echo("如果您还有任何疑问，欢迎和我们联系。")
End Sub

Function ReadAll(ByVal filepath)
	If Not fso.FileExists(filepath) Then Exit Function
	Set file=fso.OpenTextFile(filepath)
	ReadAll=file.ReadAll
	Set file=Nothing
End Function

Function Cat(ByVal filepath)
	If Not fso.FileExists(filepath) Then Exit Function
	Set file=fso.OpenTextFile(filepath)
	ReadAll=file.ReadAll
	Set file=Nothing
End Function


Function Trimpp(ByVal input)
	str=input
	strarr=Split(input,Chr(34))
	For i=0 To UBound(strarr)
		If Not IsInt((i+1)/2) Then
			str=Replace(str,strarr(i),"")
		Else
			str=Replace(str,strarr(i),LCase(strarr(i)))
		End If
	Next
	
	strarr=Split(str,vbCrLf)
	For i=0 To UBound(strarr)
		For intc=0 To Len(strarr(i))
			If Right(Left(strarr(i),intc),1)="'" Then
				outstr=Left(strarr(i),intc)
				MsgBox(outstr)
				Exit For
			End If
		Next
		str=str&outstr&vbCrLf
	Next
	Trimpp=str
	str=Null
End Function

Function InstallVBM(MoudlePath)
	If Not FSO.FolderExists(Lib) Then WScript.Echo("Can't find the 'lib', reinstall the program can solve the problem."):Exit Function
	If Not FSO.FileExists(MoudlePath) Then WScript.Echo("The Moudle file isn't exist."):Exit Function
	If LCase(FSO.GetExtensionName(MoudlePath))<>"vbs"Or LCase(FSO.GetExtensionName(MoudlePath))<>"vbe"Or LCase(FSO.GetExtensionName(MoudlePath))<>"vbm" Then WScript.Echo("The ExtensionName must be 'vbs,vbe or vbm'"):Exit Function
	FSO.MoveFile MoudlePath,Lib
	WScript.Echo("Finish!")
End Function

Function IsInt(ByVal num)
	If InStr(num,".") And IsNumeric(num)Then 
		IsInt=True
	Else
		IsInt=False
	End If
End Function

Function CD(ByVal PathStr)
	PathStr=Trim(PathStr)
	If PathStr=Null Then
		CD=WS.CurrentDirectory
		Exit Function
	End If
	If IsNumeric(PathStr) Then
		Select Case PathStr
			Case 1
			str=ws.CurrentDirectory
			str=Left(str,InStrRev(str,"\"))
			ws.CurrentDirectory=str
			str=Null
			Case 2
			str=Left(ws.CurrentDirectory,1)
			ws.CurrentDirectory=str&":\"
			str=Null
			Case Else
			WSH.Echo("Path isn't correct.....")
		End Select
	Else
		If FSO.FolderExists(ws.CurrentDirectory&"\"&PathStr) Then
			WS.CurrentDirectory=ws.CurrentDirectory&"\"&PathStr
			Exit Function
		End If
		If FSO.FolderExists(ws.CurrentDirectory&PathStr) Then
			WS.CurrentDirectory=ws.CurrentDirectory&PathStr
			CD=WS.CurrentDirectory
			Exit Function
		End If
		If Not fso.FolderExists(PathStr) Then
			WScript.Echo("Path isn't correct.....")
			CD=WS.CurrentDirectory
			Exit Function
		Else
			ws.CurrentDirectory=PathStr
		End If
	End If
	CD=WS.CurrentDirectory		
End Function

Function System(ByVal Cmd)
	Set ObjCmd=WS.Exec("cmd /c "&Cmd)
	Do While ObjCmd.StdOut.AtEndOfStream=False
		WSH.StdOut.Writeline(ObjCmd.StdOut.Readline)
	Loop
	Set ObjCmd=Nothing
End Function

Function IsCommand(ByVal str)
	Dim Strings
	str=str&" "
	char=Null
	Do Until char=" "
		i=i+1
		char=Right(Left(str,i),1)
		Strings=Left(str,i)
	Loop
	i=0
	Strings=LCase(Trim(Strings))
	
	If fso.FileExists(Strings) Then
		IsCommand=True
		Exit Function
	End If
	
	Paths=Split(ws.ExpandEnvironmentStrings("%path%"),";")
	For i=0 To UBound(Paths)
		If fso.FileExists(Paths(i)&"\"&Strings) Then
			IsCommand=True
			Exit Function
		End If
		
		If fso.FileExists(Paths(i)&"\"&Strings&".exe") Then
			IsCommand=True
			Exit Function
		End If
	Next
	
	
	If InStr(str,"if") Then
		If InStr(str,"/") Then IsCommand=True 
		If InStr(str,"%") Then IsCommand=True
		If InStr(str,"then") Then IsCommand=False
		If IsCommand Then Exit Function
	End If
	
	If InStr(str,"set") Then
		If InStr(str,".") Then 
			IsCommand=False
			Exit Function
		End If
		If InStr(str,"%") Then IsCommand=True
		If Not InStr(str,"/") Then IsCommand=True
		If IsCommand Then Exit Function
	End If
	
	
	If InStr(str,"for") Then
		If InStr(str,"/") Then IsCommand=True 
		If InStr(str,"%") Then IsCommand=True
		If InStr(str,"do") Then IsCommand=True
		If IsCommand Then Exit Function
	End If
	
	If Strings="powershell" Or Strings="cmd" Or Strings="choice" Or Strings="kill"Or Strings="shutdown"Or Strings="wget" Then
		IsCommand=False
		Exit Function
	End If
	
	If Strings = "md" Or Strings = "setx"Or Strings = "ren" Or Strings = "xcopy" Or Strings = "copy" Or Strings = "rd" Or Strings = "format" Or Strings = "del" Or Strings = "pushd" Or Strings = "popd" Or Strings = "type" Or Strings = "color" Or Strings = "call" Or Strings = "dir" Or Strings = "erase" Or Strings = "shift" Or Strings = "ftype" Or Strings = "assoc" Then
		IsCommand=True
		Exit Function
	End If
	
	For i=0 To UBound(Paths)
		If fso.FileExists(Paths(i)&"\"&Strings&".bat") Then
			IsCommand=True
			Exit Function
		End If
		If fso.FileExists(Paths(i)&"\"&Strings&".vbe") Then
			IsCommand=True
			Exit Function
		End If
		
		If fso.FileExists(Paths(i)&"\"&Strings&".vbs") Then
			IsCommand=True
			Exit Function
		End If
	Next
End Function

Function Deal(ByVal input)
	If input=Null Then Exit Function 
	If LCase(Trim(Left(input,1)))="'" Then Exit Function
	If IsCommand(input) Then
		ScriptType="bat"
	Else
		Replace input,"wscript.scriptfullname",ScriptName
	End If
	
	On Error Resume Next
		Err.Clear
		If InStr(input,"=") Then 
			
		Else
			TestEval=Eval(input)
		End If
	On Error Goto 0
		If Len(TestEval)<>0 Then
			WScript.Echo(TestEval)
			input=" "
		Else 
			Deal=input
		End If
		TestEval=null

	If InStr(input,"if") Then
		If(Right(Trim(LCase(input)),4)<>"then") Then Exit Function 
	End If 
	If InStr(input,"end") Then ControlNum=ControlNum-1
	input=Trimpp(input)
	If InputType<>2 And InStr(input,"do ")Or InStr(input,"if ")Or InStr(input,"sub ")Or InStr(input,"for ") Or InStr(input,"select ")Or InStr(input,"wend ")Or InStr(input,"function ") Then
		NotNeedCheck=False
		ControlNum=ControlNum+1
		InputType=2
	End If 
	input=Null  
End Function

Function IsUAC()
	On Error Resume Next
	FSO.CreateFolder("C:\Windows\TestUAC")
	IsUAC=True
	If Err.Number=70 Then IsUAC=False
	FSO.DeleteFolder("C:\Windows\TestUAC")
	On Error Goto 0 
End Function

Sub Echo(ByVal str)
	If Is_Remote<>True Then 
		WSH.StdOut.Write(str&vbCrLf)
	Else
		Sock.sendData(str&vbCrLf)
	End If
End Sub

Function Input()
	If Is_Remote<>True Then 
		Input=WScript.StdIn.ReadLine
	Else
		Do Until Isrecv=True
			WScript.Sleep 200
		Loop
		ExecuteGlobal("Isrecv=False")
		Input=RecvData
		RecvData=Null 
	End If
End Function

Sub Quit()
	WScript.Quit
End Sub
        </script>
	</body>
</html>